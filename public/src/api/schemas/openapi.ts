/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/campuses": {
    /**
     * Получение всех кампусов РТУ МИРЭА 
     * @description Получить все кампусы РТУ МИРЭА
     */
    get: operations["get_campuses_api_campuses_get"];
  };
  "/api/campuses/{campus_id}/rooms": {
    /**
     * Получение всех аудитории по кампусу 
     * @description Получить все аудитории по кампусу
     */
    get: operations["get_rooms_api_campuses__campus_id__rooms_get"];
  };
  "/api/": {
    /** Groups Html */
    get: operations["groups_html_api__get"];
  };
  "/api/group-schedule/{name}": {
    /** Group Schedule Html */
    get: operations["group_schedule_html_api_group_schedule__name__get"];
  };
  "/api/groups": {
    /**
     * Получение всех учебных групп 
     * @description Получить все учебные группы
     */
    get: operations["get_api_groups_get"];
  };
  "/api/groups/{name}": {
    /**
     * Get Group Schedule 
     * @description Получить группу и её расписание по названию
     */
    get: operations["get_group_schedule_api_groups__name__get"];
  };
  "/api/teachears/search/{name}": {
    /**
     * Поиск преподавателя по имени 
     * @description Поиск преподавателя по имени
     */
    get: operations["search_teacher_by_name_api_teachears_search__name__get"];
  };
  "/api/lessons/{room_id}": {
    /**
     * Получение расписания аудитории 
     * @description Получить расписание аудитории
     */
    get: operations["get_room_lessons_api_lessons__room_id__get"];
  };
  "/api/lessons-by-date/{room_id}/{date}": {
    /**
     * Получение расписания аудитории на указанную дату 
     * @description Получить расписание аудитории на указанную дату
     */
    get: operations["get_rooms_lesson_by_room_and_date_api_lessons_by_date__room_id___date__get"];
  };
  "/api/lessons-by-week/{room_id}/{week}": {
    /**
     * Получение расписания аудитории на указанную неделю 
     * @description Получить расписание аудитории на указанную неделю
     */
    get: operations["get_rooms_lesson_by_room_and_week_api_lessons_by_week__room_id___week__get"];
  };
  "/api/search/{name}": {
    /**
     * Поиск аудитории 
     * @description Поиск аудитории по названию аудитории (по подстроке)
     */
    get: operations["search_rooms_api_search__name__get"];
  };
  "/api/workload/{room_id}": {
    /**
     * Получение загруженности аудитории 
     * @description Получить загруженность аудитории
     */
    get: operations["get_workload_api_workload__room_id__get"];
  };
  "/api/statuses/": {
    /**
     * Получение статусов аудиторий 
     * @description Получить статусы аудиторий (свободна/занята) для указанного времени
     */
    get: operations["get_statuses_api_statuses__get"];
  };
  "/api/workload/all/{campus_substr}": {
    /**
     * Получение загруженности всех аудиторий по корпусу 
     * @description Получить загруженность всех аудиторий по корпусу (подстрока)
     */
    get: operations["get_all_workload_api_workload_all__campus_substr__get"];
  };
  "/api/statuses/all/{campus_substr}": {
    /**
     * Получение статусов всех аудиторий по корпусу 
     * @description Получить статусы всех аудиторий по корпусу (подстрока)
     */
    get: operations["get_all_statuses_api_statuses_all__campus_substr__get"];
  };
  "/api/parse-schedule/": {
    /** Parse Schedule */
    post: operations["parse_schedule_api_parse_schedule__post"];
  };
  "/api/lks/{group_name}": {
    /**
     * Get Lks Schedule 
     * @description Получить расписание в формате ЛКс
     */
    get: operations["get_lks_schedule_api_lks__group_name__get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** Campus */
    Campus: {
      /** Name */
      name: string;
      /** Short Name */
      short_name: string;
      /** Id */
      id: number;
    };
    /** Degree */
    Degree: {
      /** Name */
      name: string;
      /** Id */
      id: number;
    };
    /** Discipline */
    Discipline: {
      /** Name */
      name: string;
      /** Id */
      id: number;
    };
    /** Group */
    Group: {
      /** Id */
      id: number;
      /** Name */
      name: string;
      period: components["schemas"]["Period"];
      institute: components["schemas"]["Institute"];
      degree: components["schemas"]["Degree"];
      /** Lessons */
      lessons: (components["schemas"]["Lesson"])[];
    };
    /** GroupList */
    GroupList: {
      institute: components["schemas"]["Institute"];
      degree: components["schemas"]["Degree"];
      /** Groups */
      groups: (string)[];
    };
    /** Groups */
    Groups: {
      /** Total */
      total: number;
      /** Result */
      result: (components["schemas"]["GroupList"])[];
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: (components["schemas"]["ValidationError"])[];
    };
    /** Institute */
    Institute: {
      /** Name */
      name: string;
      /** Short Name */
      short_name: string;
      /** Id */
      id: number;
    };
    /** Lesson */
    Lesson: {
      /** Id */
      id: number;
      lesson_type?: components["schemas"]["LessonType"];
      discipline: components["schemas"]["Discipline"];
      /** Teachers */
      teachers: (components["schemas"]["Teacher"])[];
      room?: components["schemas"]["Room"];
      calls: components["schemas"]["LessonCall"];
      /** Weekday */
      weekday: number;
      /** Subgroup */
      subgroup?: number;
      /** Weeks */
      weeks: (number)[];
    };
    /** LessonCall */
    LessonCall: {
      /** Num */
      num: number;
      /**
       * Time Start 
       * Format: time
       */
      time_start: string;
      /**
       * Time End 
       * Format: time
       */
      time_end: string;
      /** Id */
      id: number;
    };
    /** LessonType */
    LessonType: {
      /** Name */
      name: string;
      /** Id */
      id: number;
    };
    /** LksDay */
    LksDay: {
      /** Days */
      DAYS: {
        [key: string]: components["schemas"]["LksLessons"] | undefined;
      };
    };
    /** LksLesson */
    LksLesson: {
      /** Property Discipline Name */
      PROPERTY_DISCIPLINE_NAME: string;
      /** Property Lesson Type */
      PROPERTY_LESSON_TYPE: string;
      /** Property Number */
      PROPERTY_NUMBER: string;
      /** Property Lector */
      PROPERTY_LECTOR: string;
      /** Property Place */
      PROPERTY_PLACE: string;
    };
    /** LksLessons */
    LksLessons: {
      /** Lessons */
      LESSONS: {
        [key: string]: (components["schemas"]["LksLesson"])[] | undefined;
      };
    };
    /** LksSchedule */
    LksSchedule: {
      result: components["schemas"]["LksWeeks"];
    };
    /** LksWeeks */
    LksWeeks: {
      /** Weeks */
      WEEKS: {
        [key: string]: components["schemas"]["LksDay"] | undefined;
      };
    };
    /** Msg */
    Msg: {
      /** Msg */
      msg: string;
    };
    /** Period */
    Period: {
      /** Year Start */
      year_start: number;
      /** Year End */
      year_end: number;
      /** Semester */
      semester: number;
      /** Id */
      id: number;
    };
    /** Room */
    Room: {
      /** Name */
      name: string;
      /** Campus Id */
      campus_id?: number;
      /** Id */
      id: number;
      campus?: components["schemas"]["Campus"];
    };
    /** Teacher */
    Teacher: {
      /** Name */
      name: string;
      /** Id */
      id: number;
      /**
       * Lessons 
       * @default []
       */
      lessons?: (components["schemas"]["TeacherLesson"])[];
    };
    /**
     * TeacherLesson 
     * @description For Teacher model
     */
    TeacherLesson: {
      /** Id */
      id: number;
      lesson_type?: components["schemas"]["LessonType"];
      discipline: components["schemas"]["Discipline"];
      room?: components["schemas"]["Room"];
      calls: components["schemas"]["LessonCall"];
      /** Weekday */
      weekday: number;
      /** Subgroup */
      subgroup?: number;
      /** Weeks */
      weeks: (number)[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  get_campuses_api_campuses_get: {
    /**
     * Получение всех кампусов РТУ МИРЭА 
     * @description Получить все кампусы РТУ МИРЭА
     */
    responses: {
      /** @description Успешный возврат списка кампусов */
      200: {
        content: {
          "application/json": (components["schemas"]["Campus"])[];
        };
      };
    };
  };
  get_rooms_api_campuses__campus_id__rooms_get: {
    /**
     * Получение всех аудитории по кампусу 
     * @description Получить все аудитории по кампусу
     */
    parameters: {
        /** @description Id кампуса */
      path: {
        campus_id: number;
      };
    };
    responses: {
      /** @description Успешный возврат списка аудиторий указанного кампуса */
      200: {
        content: {
          "application/json": (components["schemas"]["Room"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  groups_html_api__get: {
    /** Groups Html */
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "text/html": string;
        };
      };
    };
  };
  group_schedule_html_api_group_schedule__name__get: {
    /** Group Schedule Html */
    parameters: {
        /** @description Имя группы */
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "text/html": string;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_api_groups_get: {
    /**
     * Получение всех учебных групп 
     * @description Получить все учебные группы
     */
    responses: {
      /** @description Успешный возврат списка групп */
      200: {
        content: {
          "application/json": components["schemas"]["Groups"];
        };
      };
    };
  };
  get_group_schedule_api_groups__name__get: {
    /**
     * Get Group Schedule 
     * @description Получить группу и её расписание по названию
     */
    parameters: {
        /** @description Имя группы */
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Group"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  search_teacher_by_name_api_teachears_search__name__get: {
    /**
     * Поиск преподавателя по имени 
     * @description Поиск преподавателя по имени
     */
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["Teacher"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_room_lessons_api_lessons__room_id__get: {
    /**
     * Получение расписания аудитории 
     * @description Получить расписание аудитории
     */
    parameters: {
      path: {
        room_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["Lesson"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_rooms_lesson_by_room_and_date_api_lessons_by_date__room_id___date__get: {
    /**
     * Получение расписания аудитории на указанную дату 
     * @description Получить расписание аудитории на указанную дату
     */
    parameters: {
      path: {
        room_id: number;
        date: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["Lesson"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_rooms_lesson_by_room_and_week_api_lessons_by_week__room_id___week__get: {
    /**
     * Получение расписания аудитории на указанную неделю 
     * @description Получить расписание аудитории на указанную неделю
     */
    parameters: {
      path: {
        room_id: number;
        week: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["Lesson"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  search_rooms_api_search__name__get: {
    /**
     * Поиск аудитории 
     * @description Поиск аудитории по названию аудитории (по подстроке)
     */
    parameters: {
      path: {
        name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": (components["schemas"]["Room"])[];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_workload_api_workload__room_id__get: {
    /**
     * Получение загруженности аудитории 
     * @description Получить загруженность аудитории
     */
    parameters: {
      path: {
        room_id: number;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["Msg"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_statuses_api_statuses__get: {
    /**
     * Получение статусов аудиторий 
     * @description Получить статусы аудиторий (свободна/занята) для указанного времени
     */
    parameters: {
        /** @description Дата и время в ISO формате. Пример: 2021-09-01T00:00:00+03:00 */
        /** @description Список аудиторий. Пример: ['А-101', 'А-102'] */
      query: {
        date_time?: string;
        rooms: (string)[];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_all_workload_api_workload_all__campus_substr__get: {
    /**
     * Получение загруженности всех аудиторий по корпусу 
     * @description Получить загруженность всех аудиторий по корпусу (подстрока)
     */
    parameters: {
      path: {
        campus_substr: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_all_statuses_api_statuses_all__campus_substr__get: {
    /**
     * Получение статусов всех аудиторий по корпусу 
     * @description Получить статусы всех аудиторий по корпусу (подстрока)
     */
    parameters: {
        /** @description Дата и время в ISO формате. Пример: 2021-09-01T00:00:00+03:00 */
      query?: {
        date_time?: string;
      };
      path: {
        campus_substr: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  parse_schedule_api_parse_schedule__post: {
    /** Parse Schedule */
    parameters: {
        /** @description Ключ доступа */
      query: {
        secret_key: string;
      };
    };
    responses: {
      /** @description Successful Response */
      201: {
        content: {
          "application/json": components["schemas"]["Msg"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  get_lks_schedule_api_lks__group_name__get: {
    /**
     * Get Lks Schedule 
     * @description Получить расписание в формате ЛКс
     */
    parameters: {
      path: {
        group_name: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": components["schemas"]["LksSchedule"];
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
}
