version: "3.8"
services:
  proxy:
    ports:
      - "80:80"
      - "8090:8080"
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-traefik-public-http.rule=Host(`${DOMAIN?Variable not set}`)
      - traefik.http.services.traefik-traefik-public.loadbalancer.server.port=80

  pgadmin:
    ports:
      - "5050:5050"

  backend:
    build:
      context: .
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    ports:
      - "8080:8080"
    environment:
      DEBUG: ${DEBUG}

      BACKEND_TTILE: ${BACKEND_TTILE}
      BACKEND_DESCRIPTION: ${BACKEND_DESCRIPTION}
      BACKEND_PREFIX: ${BACKEND_PREFIX}

      BACKEND_HOST: ${BACKEND_HOST}
      BACKEND_PORT: ${BACKEND_PORT}
      BACKEND_RELOAD: ${BACKEND_RELOAD}

      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

      BROKER_HOST: ${BROKER_HOST}
      BROKER_PORT: ${BROKER_PORT}
      BROKER_USER: ${BROKER_USER}
      BROKER_PASS: ${BROKER_PASS}
      BROKER_URL: ${BROKER_URL}

      ENV: development
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.traefik-backend.loadbalancer.server.port=80